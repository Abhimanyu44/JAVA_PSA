# Static and Non-static Methods:

#Example:
public class A{
    public static void main(String arg[]){ //Static Method
        A a1 = new A();
        a1.test(); //Calling the 'non-static method test()' using an instance 'a1'  
        
        A.test1(); //Calling the 'static method test1()' using the class 'A'
    }

    public void test(){ //Non-static Method
        System.out.println("Testing");
    }

    public static void test1(){ //Static Method
        System.out.println(100);
    } 
}


-------------------------------------------------------------------------------------------------
#What is void, return, return value?
- example1:
    public class A{
        public static void main(String arg[]){
            A a1 = new A();
            
            System.out.println(a1.test()); //Error 
            System.out.println(a1.test1()); //100
            System.out.println(a1.test2()); //10.6 
            System.out.println(a1.test3()); //"Testing"
        }

        public void test(){
            return 100;  //Error, since void never return any value. 
        }    

        public int test1(){
            return 100;  //Correct. 
        }

        public double test2(){
            return 10.6; //Correct. 
        }

        public String test3(){
            return "Testing"; //Correct.
        }
    }  

- Void:
    - if a method is 'Void' than that method 'cannot return' any value.

- return:
    - We can use only return keyword inside void Method. 
    - It is optional to use.
    - It will return program control back to method calling statement.
    - Note: If we write anything after 'return' keyword then that line will never run & hence we will get 'unreachable code error'.
    
    - Example:
        public class A {
            public static void main(String args[]){
                A a1 = new A();
                a1.test();            
            }
            
            public void test(){
                return; //Will return program control back to method calling statement.       
            }
        }  


- return value:
    - We can only use "return value" keyword inside a 'non void method'.
    - It is mandatory to use "return value" keyword inside a 'non void method' or else we will get an error.
        - Example:
            public class A {
                public static void main(String args[]){
                }

                public int test(){ //Error because "return value" keyword is missing. 
                }
            } 
    
    - It will return value and program control back to method calling statement.
    - Note: If we write anything after 'return value' keyword then that line will never run & hence we will get 'unreachable code error'.



-------------------------------------------------------------------------------------------------
# method arguments:
- example1:
    public class A{
        public static void main(String args[]){
            A a1 = new A();
            a1.test(100);
        }

        public void test(int x){
            System.out.println(x);
        }
    }

- example2:
    public class A{
        public static void main(String args[]){
            A a1 = new A();
            a1.test(100, 'test');
        }

        public void test(int x,  String y){
            System.out.println(x, y);
        } 
    }

- example3:
    public class A{
        public static void main(String args[]){
            A a1 = new A();
            a1.test(10, 20, 30, 40, 50);   
        }
        public void test(int... x){
            System.out.println(x[0]);
            System.out.println(x[1]);
            System.out.println(x[2]);
            System.out.println(x[3]);
            System.out.println(x[4]);
        }
    }



-------------------------------------------------------------------------------------------------
# What method does?
    - Method breaks application into smaller reuseable modules.  










